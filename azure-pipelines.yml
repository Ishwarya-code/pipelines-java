# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main
stages:
- stage: build
  jobs:
  - job: run_build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Maven@3
      inputs:
       mavenPomFile: 'pom.xml'
       mavenOptions: '-Xmx3072m'
       javaHomeOption: 'JDKVersion'
       jdkVersionOption: '1.8'
       jdkArchitectureOption: 'x64'
       publishJUnitResults: true
       testResultsFiles: '**/surefire-reports/TEST-*.xml'
       goals: 'package'
    - task: CopyFiles@2
      inputs:
       SourceFolder: '$(system.defaultworkingdirectory)'
       Contents: '**/*.jar'
       TargetFolder: '$(build.artifactstagingdirectory)'
    - publish: $(build.artifactstagingdirectory)
      artifact: drop
    # - task: PublishBuildArtifacts@1
    #   inputs:
    #    PathtoPublish: '$(build.artifactstagingdirectory)'
    #    ArtifactName: 'drop'
    #    publishLocation: 'Container'

- stage: test
  dependsOn: build
  jobs:
  - deployment: VMDeploy
    displayName: web
    environment:
      name: VMDeploy
      resourceType: VirtualMachine
      tags: web2
    strategy:
      runOnce:
        preDeploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
             source: 'current'
             artifact: drop
             path: '$(Pipeline.Workspace)'        
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'            
          - script: |
                # Modify deployment script based on the app type
                echo "Starting deployment script run"
                sudo java -jar '$(Pipeline.Workspace)/drop/target/helloworld.jar'

